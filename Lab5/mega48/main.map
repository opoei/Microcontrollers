Archive member included because of file (symbol)

/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
                              /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm48.o (exit)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
                              main.o (__itoa_ncheck)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
                              /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/libc.a(itoa_ncheck.o) (__utoa_common)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/libc.a(strrev.o)
                              /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/libc.a(utoa_ncheck.o) (strrev)

Allocating common symbols
Common symbol       size              file

uart_tx_buf         0x28              uart_functions_m48.o
twi_state           0x1               twi_master.o
temp_val            0x10              main.o
twi_buf             0x2               twi_master.o
twi_bus_addr        0x1               twi_master.o
twi_msg_size        0x1               twi_master.o
uart_rx_buf         0x28              uart_functions_m48.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm48.o
LOAD main.o
LOAD uart_functions_m48.o
LOAD twi_master.o
START GROUP
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/libm.a
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x3ca
 *(.vectors)
 .vectors       0x00000000       0x34 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm48.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x00000034       0xa2 twi_master.o
                0x000000d6                . = ALIGN (0x2)
                0x000000d6                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000d6        0x0 linker stubs
 *(.trampolines*)
                0x000000d6                __trampolines_end = .
 *(.progmem*)
                0x000000d6                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000d6                __ctors_start = .
 *(.ctors)
                0x000000d6                __ctors_end = .
                0x000000d6                __dtors_start = .
 *(.dtors)
                0x000000d6                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000d6        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm48.o
                0x000000d6                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000d6        0xc /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm48.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000e2       0x10 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                0x000000e2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000f2        0x4 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm48.o
 *(.init9)
 *(.text)
 .text          0x000000f6        0x2 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm48.o
                0x000000f6                __vector_20
                0x000000f6                __vector_1
                0x000000f6                __vector_12
                0x000000f6                __bad_interrupt
                0x000000f6                __vector_6
                0x000000f6                __vector_3
                0x000000f6                __vector_23
                0x000000f6                __vector_25
                0x000000f6                __vector_11
                0x000000f6                __vector_13
                0x000000f6                __vector_17
                0x000000f6                __vector_19
                0x000000f6                __vector_7
                0x000000f6                __vector_5
                0x000000f6                __vector_4
                0x000000f6                __vector_9
                0x000000f6                __vector_2
                0x000000f6                __vector_21
                0x000000f6                __vector_15
                0x000000f6                __vector_8
                0x000000f6                __vector_14
                0x000000f6                __vector_10
                0x000000f6                __vector_16
                0x000000f6                __vector_18
                0x000000f6                __vector_22
 .text          0x000000f8        0x0 main.o
 .text          0x000000f8       0xaa uart_functions_m48.o
                0x000000f8                uart_putc
                0x0000010e                uart_puts
                0x00000134                uart_puts_p
                0x00000164                uart_init
                0x00000184                uart_getc
 .text          0x000001a2      0x170 twi_master.o
                0x000001a2                __vector_24
                0x000002b4                twi_busy
                0x000002bc                twi_start_wr
                0x000002de                twi_start_rd
                0x00000300                init_twi
 .text          0x00000312        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text          0x00000312        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text          0x00000312        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
 .text          0x00000312        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
 .text          0x00000312        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/libc.a(strrev.o)
                0x00000312                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000312       0x4e main.o
                0x00000312                main
 .text.libgcc.mul
                0x00000360        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000360        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000360        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000360        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000360        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000360        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000360        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000360        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000360        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000360        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000360        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000360        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000360        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000360        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000360       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
                0x00000360                __itoa_ncheck
 .text.avr-libc
                0x00000374       0x32 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
                0x00000374                __utoa_ncheck
                0x00000376                __utoa_common
 .text.avr-libc
                0x000003a6       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/libc.a(strrev.o)
                0x000003a6                strrev
                0x000003c6                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000003c6        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
                0x000003c6                exit
                0x000003c6                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000003c6        0x4 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x000003ca                _etext = .

.data           0x00800100        0x0 load address 0x000003ca
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm48.o
 .data          0x00800100        0x0 main.o
 .data          0x00800100        0x0 uart_functions_m48.o
 .data          0x00800100        0x0 twi_master.o
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100       0x66
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm48.o
 .bss           0x00800100        0x0 main.o
 .bss           0x00800100        0x0 uart_functions_m48.o
 .bss           0x00800100        0x1 twi_master.o
 .bss           0x00800101        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .bss           0x00800101        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .bss           0x00800101        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
 .bss           0x00800101        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
 .bss           0x00800101        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800101       0x10 main.o
                0x00800101                temp_val
 COMMON         0x00800111       0x50 uart_functions_m48.o
                0x00800111                uart_tx_buf
                0x00800139                uart_rx_buf
 COMMON         0x00800161        0x5 twi_master.o
                0x00800161                twi_state
                0x00800162                twi_buf
                0x00800164                twi_bus_addr
                0x00800165                twi_msg_size
                0x00800166                PROVIDE (__bss_end, .)
                0x000003ca                __data_load_start = LOADADDR (.data)
                0x000003ca                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800166        0x0
                0x00800166                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800166                PROVIDE (__noinit_end, .)
                0x00800166                _end = .
                0x00800166                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x11
 *(.comment)
 .comment       0x00000000       0x11 main.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 uart_functions_m48.o
 .comment       0x00000000       0x12 twi_master.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xa0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 uart_functions_m48.o
 .debug_aranges
                0x00000040       0x20 twi_master.o
 .debug_aranges
                0x00000060       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .debug_aranges
                0x00000080       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000      0x87f
 *(.debug_info)
 .debug_info    0x00000000      0x300 main.o
 .debug_info    0x00000300      0x225 uart_functions_m48.o
 .debug_info    0x00000525      0x1de twi_master.o
 .debug_info    0x00000703       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .debug_info    0x000007c1       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x458
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x1d8 main.o
 .debug_abbrev  0x000001d8      0x157 uart_functions_m48.o
 .debug_abbrev  0x0000032f      0x101 twi_master.o
 .debug_abbrev  0x00000430       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .debug_abbrev  0x00000444       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)

.debug_line     0x00000000      0x305
 *(.debug_line)
 .debug_line    0x00000000       0xce main.o
 .debug_line    0x000000ce       0xb5 uart_functions_m48.o
 .debug_line    0x00000183       0xcc twi_master.o
 .debug_line    0x0000024f       0x58 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .debug_line    0x000002a7       0x5e /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)

.debug_frame    0x00000000      0x120
 *(.debug_frame)
 .debug_frame   0x00000000       0x24 main.o
 .debug_frame   0x00000024       0x64 uart_functions_m48.o
 .debug_frame   0x00000088       0x98 twi_master.o

.debug_str      0x00000000      0x210
 *(.debug_str)
 .debug_str     0x00000000      0x136 main.o
                                0x174 (size before relaxing)
 .debug_str     0x00000136       0x65 uart_functions_m48.o
                                0x152 (size before relaxing)
 .debug_str     0x0000019b       0x75 twi_master.o
                                0x15e (size before relaxing)

.debug_loc      0x00000000      0x2ee
 *(.debug_loc)
 .debug_loc     0x00000000       0x5e main.o
 .debug_loc     0x0000005e      0x1b7 uart_functions_m48.o
 .debug_loc     0x00000215       0xd9 twi_master.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000       0x28
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x10 main.o
 .debug_ranges  0x00000010       0x18 uart_functions_m48.o

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs
